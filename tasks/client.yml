---
# Set up the client side
- name: Install required packages
  package:
    name: "{{ item }}"
    state: "{{ pkgversion | default('present') }}"
  with_items:
    - rsync

- name: Push the rrsync script to client hosts
  copy:
    src: usr/local/bin/rrsync
    dest: /usr/local/bin/rrsync
    owner: root
    group: root
    mode: 0755

- name: Create {{ rsnapshot_user }} user on backup client
  user:
    name: "{{ rsnapshot_user }}"
    comment: "rsnapshot Backup User"

- name: Register SSH public key for {{ rsnapshot_user }} user on the server
  slurp:
    src: "/root/.ssh/id_{{ rsnapshot_user }}.pub"
  register: backup_user_key
  delegate_to: "{{ backup_server }}"

- name: Add server SSH public key to authorized_keys for {{ rsnapshot_user }} user on the client
  authorized_key:
    user: "{{ rsnapshot_user }}"
    state: present
    key: "{{ backup_user_key['content'] | b64decode }}"
    key_options: 'from="{{ backup_server_ip }}",no-agent-forwarding,no-port-forwarding,no-pty,no-user-rc,no-X11-forwarding,command="/usr/bin/sudo /usr/local/bin/rrsync -ro /"'
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set up sudoers for the {{ rsnapshot_user }} user
  template:
    src: etc/sudoers.d/rsnapshot.j2
    dest: /etc/sudoers.d/rsnapshot
    owner: root
    group: root
    mode: 0640

- name: Ensure the sudoers.d files are being included
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^#includedir /etc/sudoers.d"
    line: "#includedir /etc/sudoers.d"
    validate: '/usr/sbin/visudo -cf %s'

- name: Create client backup configurations on the server
  template:
    src: etc/rsnapshot.d/rsnapshot-host-template.j2
    dest: "/etc/rsnapshot.d/{{ hostname }}.{{ domainname }}.conf"
    owner: root
    group: root
    mode: 0644
  tags: update_rsnapshot_config
  delegate_to: "{{ backup_server }}"

- name: Create the client backup location on the server
  file:
    path: "{{ hostvars[backup_server]['rsnapshot_backup_root'] }}/{{ hostname }}.{{ domainname }}"
    state: directory
    mode: 0700
  tags: update_rsnapshot_config
  delegate_to: "{{ backup_server }}"

- name: Check for the client SSH host key in the server known_hosts
  command: "/usr/bin/ssh-keygen -F {{ hostname }}.{{ domainname }}"
  register: rsnapshot_known_hosts_check
  delegate_to: "{{ backup_server }}"
  changed_when: false
  check_mode: false
  ignore_errors: true

- name: Register the rsnapshot client SSH host key
  command: "/usr/bin/ssh-keyscan -H {{ hostname }}.{{ domainname }}"
  register: rsnapshot_client_keyscan
  delegate_to: "{{ backup_server }}"
  changed_when: false
  check_mode: false
  when: rsnapshot_known_hosts_check.rc == 1

- name: Add the rsnapshot client SSH host key to known_hosts on the rsnapshot server
  lineinfile:
    path: /root/.ssh/known_hosts
    line: "{{ item }}"
  with_items:
    - "{{ rsnapshot_client_keyscan.stdout_lines }}"
  delegate_to: "{{ backup_server }}"
  when: rsnapshot_known_hosts_check.rc == 1
